{"ast":null,"code":"var _jsxFileName = \"D:\\\\event-photo-sharing\\\\src\\\\components\\\\UploadForm.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadForm({\n  onImageUpload\n}) {\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (!file) {\n      return;\n    }\n\n    // Check if the file type is an image\n    if (!file.type.match('image.*')) {\n      alert('Please select an image file.');\n      return;\n    }\n\n    // Additional check for specific image formats (optional)\n    const validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];\n    if (!validImageTypes.includes(file.type)) {\n      alert('Only JPEG, PNG, and GIF files are allowed.');\n      return;\n    }\n    const imageUrl = URL.createObjectURL(file);\n    onImageUpload(imageUrl); // Call the passed in function with the new image URL\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      onChange: handleFileChange,\n      accept: \"image/jpeg, image/png, image/gif\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: () => fileInputRef.current.click(),\n      children: \"Upload Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = UploadForm;\nexport default UploadForm;\nvar _c;\n$RefreshReg$(_c, \"UploadForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","UploadForm","onImageUpload","handleFileChange","event","file","target","files","type","match","alert","validImageTypes","includes","imageUrl","URL","createObjectURL","children","ref","fileInputRef","onChange","accept","style","display","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","current","click","_c","$RefreshReg$"],"sources":["D:/event-photo-sharing/src/components/UploadForm.js"],"sourcesContent":["import React from 'react';\r\n\r\nfunction UploadForm({ onImageUpload }) {\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) {\r\n      return;\r\n    }\r\n\r\n    // Check if the file type is an image\r\n    if (!file.type.match('image.*')) {\r\n      alert('Please select an image file.');\r\n      return;\r\n    }\r\n\r\n    // Additional check for specific image formats (optional)\r\n    const validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];\r\n    if (!validImageTypes.includes(file.type)) {\r\n      alert('Only JPEG, PNG, and GIF files are allowed.');\r\n      return;\r\n    }\r\n\r\n    const imageUrl = URL.createObjectURL(file);\r\n    onImageUpload(imageUrl); // Call the passed in function with the new image URL\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"file\"\r\n        ref={fileInputRef}\r\n        onChange={handleFileChange}\r\n        accept=\"image/jpeg, image/png, image/gif\"\r\n        style={{ display: 'none' }}\r\n      />\r\n      <button className=\"upload-button\" onClick={() => fileInputRef.current.click()}>\r\n        Upload Image\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UploadForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAC;EAAEC;AAAc,CAAC,EAAE;EACrC,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;MACT;IACF;;IAEA;IACA,IAAI,CAACA,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,SAAS,CAAC,EAAE;MAC/BC,KAAK,CAAC,8BAA8B,CAAC;MACrC;IACF;;IAEA;IACA,MAAMC,eAAe,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,CAAC;IAChE,IAAI,CAACA,eAAe,CAACC,QAAQ,CAACP,IAAI,CAACG,IAAI,CAAC,EAAE;MACxCE,KAAK,CAAC,4CAA4C,CAAC;MACnD;IACF;IAEA,MAAMG,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACV,IAAI,CAAC;IAC1CH,aAAa,CAACW,QAAQ,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,oBACEb,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MACEQ,IAAI,EAAC,MAAM;MACXS,GAAG,EAAEC,YAAa;MAClBC,QAAQ,EAAEhB,gBAAiB;MAC3BiB,MAAM,EAAC,kCAAkC;MACzCC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF1B,OAAA;MAAQ2B,SAAS,EAAC,eAAe;MAACC,OAAO,EAAEA,CAAA,KAAMV,YAAY,CAACW,OAAO,CAACC,KAAK,CAAC,CAAE;MAAAd,QAAA,EAAC;IAE/E;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACK,EAAA,GAtCQ9B,UAAU;AAwCnB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}