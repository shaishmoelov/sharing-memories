{"ast":null,"code":"var _jsxFileName = \"D:\\\\event-photo-sharing\\\\src\\\\components\\\\SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './AuthForm.css'; // Assuming a shared CSS file for auth forms\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const [formData, setFormData] = useState({\n    names: '',\n    email: '',\n    confirmEmail: '',\n    password: '',\n    confirmPassword: '',\n    paymentDetails: '',\n    phoneNumber: '',\n    desiredDate: ''\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (formData.email !== formData.confirmEmail) {\n      alert(\"Emails do not match.\");\n      return;\n    }\n    if (formData.password !== formData.confirmPassword) {\n      alert(\"Passwords do not match.\");\n      return;\n    }\n\n    // Simple base64 encoding as a placeholder for hashing\n    const hashedPassword = btoa(formData.password);\n    const userData = {\n      username: formData.email,\n      // Using email as username\n      password: hashedPassword\n    };\n\n    // Storing user data in local storage\n    localStorage.setItem(userData.username, JSON.stringify(userData));\n\n    // Navigate to a confirmation or another page\n    navigate(`/confirm/someEventId`); // Change 'someEventId' as needed\n  };\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.id]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"form-title\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"names\",\n        className: \"input-label\",\n        children: \"Names of the Couple:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"names\",\n        name: \"names\",\n        value: formData.names,\n        onChange: handleChange,\n        className: \"text-input\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this)\n\n  /*<div>\r\n    <h2>Sign Up</h2>\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label htmlFor=\"names\">Names of the Couple:</label>\r\n        <input type=\"text\" id=\"names\" value={formData.names} onChange={handleChange} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Email:</label>\r\n        <input type=\"email\" id=\"email\" value={formData.email} onChange={handleChange} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"confirmEmail\">Confirm Email:</label>\r\n        <input type=\"email\" id=\"confirmEmail\" value={formData.confirmEmail} onChange={handleChange} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password:</label>\r\n        <input type=\"password\" id=\"password\" value={formData.password} onChange={handleChange} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r\n        <input type=\"password\" id=\"confirmPassword\" value={formData.confirmPassword} onChange={handleChange} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"paymentDetails\">Payment Details:</label>\r\n        <input type=\"text\" id=\"paymentDetails\" value={formData.paymentDetails} onChange={handleChange} />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n        <input type=\"tel\" id=\"phoneNumber\" value={formData.phoneNumber} onChange={handleChange} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"desiredDate\">Desired Date:</label>\r\n        <input type=\"date\" id=\"desiredDate\" value={formData.desiredDate} onChange={handleChange} required />\r\n      </div>\r\n      <button type=\"submit\">Sign Up</button>\r\n    </form>\r\n  </div>*/;\n}\n_s(SignUp, \"UjcWWc24k4dZctqO33VpjA0y4Vw=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SignUp","_s","formData","setFormData","names","email","confirmEmail","password","confirmPassword","paymentDetails","phoneNumber","desiredDate","navigate","handleSubmit","e","preventDefault","alert","hashedPassword","btoa","userData","username","localStorage","setItem","JSON","stringify","handleChange","target","id","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","name","onChange","required","_c","$RefreshReg$"],"sources":["D:/event-photo-sharing/src/components/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AuthForm.css'; // Assuming a shared CSS file for auth forms\r\n\r\nfunction SignUp() {\r\n  const [formData, setFormData] = useState({\r\n    names: '',\r\n    email: '',\r\n    confirmEmail: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    paymentDetails: '',\r\n    phoneNumber: '',\r\n    desiredDate: ''\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (formData.email !== formData.confirmEmail) {\r\n      alert(\"Emails do not match.\");\r\n      return;\r\n    }\r\n    if (formData.password !== formData.confirmPassword) {\r\n      alert(\"Passwords do not match.\");\r\n      return;\r\n    }\r\n\r\n    // Simple base64 encoding as a placeholder for hashing\r\n    const hashedPassword = btoa(formData.password);\r\n    const userData = {\r\n      username: formData.email, // Using email as username\r\n      password: hashedPassword,\r\n    };\r\n\r\n    // Storing user data in local storage\r\n    localStorage.setItem(userData.username, JSON.stringify(userData));\r\n\r\n    // Navigate to a confirmation or another page\r\n    navigate(`/confirm/someEventId`); // Change 'someEventId' as needed\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.id]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"auth-form-container\">\r\n    <h2 className=\"form-title\">Sign Up</h2>\r\n    <form onSubmit={handleSubmit} className=\"auth-form\">\r\n      {/* Example for one field, repeat for others */}\r\n      <label htmlFor=\"names\" className=\"input-label\">Names of the Couple:</label>\r\n      <input type=\"text\" id=\"names\" name=\"names\" value={formData.names} onChange={handleChange} className=\"text-input\" required />\r\n      <label htmlFor=\"email\">Email:</label>\r\n      <input type=\"email\" id=\"email\" value={formData.email} onChange={handleChange} required />\r\n      \r\n      {/* Include other fields based on formData */}\r\n      <button type=\"submit\" className=\"submit-button\">Sign Up</button>\r\n    </form>\r\n  </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    /*<div>\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"names\">Names of the Couple:</label>\r\n          <input type=\"text\" id=\"names\" value={formData.names} onChange={handleChange} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input type=\"email\" id=\"email\" value={formData.email} onChange={handleChange} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirmEmail\">Confirm Email:</label>\r\n          <input type=\"email\" id=\"confirmEmail\" value={formData.confirmEmail} onChange={handleChange} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password:</label>\r\n          <input type=\"password\" id=\"password\" value={formData.password} onChange={handleChange} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirmPassword\">Confirm Password:</label>\r\n          <input type=\"password\" id=\"confirmPassword\" value={formData.confirmPassword} onChange={handleChange} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"paymentDetails\">Payment Details:</label>\r\n          <input type=\"text\" id=\"paymentDetails\" value={formData.paymentDetails} onChange={handleChange} />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"phoneNumber\">Phone Number:</label>\r\n          <input type=\"tel\" id=\"phoneNumber\" value={formData.phoneNumber} onChange={handleChange} required />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"desiredDate\">Desired Date:</label>\r\n          <input type=\"date\" id=\"desiredDate\" value={formData.desiredDate} onChange={handleChange} required />\r\n        </div>\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n    </div>*/\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}